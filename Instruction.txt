# Case01：
客户端上传加法算式，服务端返回计算结果。客户端发送间隔50毫秒，发送200000次。同时启动5个客户端进行测试。
理想结果：
服务端能正确解析算式，计算出结果，并返回给客户端。

# Case02：
客户端上传一段短报文，服务器返回客户端上传原文。客户端发送间隔50毫秒，发送200000次。同时启动50个客户端进行测试。
理想结果：
服务端能正确接收报文，并将原文给客户端。

# Case03：
客户端上传一段长报文（Size > 1024K），服务器返回客户端上传原文。客户端发送间隔50毫秒，发送200000次。同时启动50个客户端进行测试。
理想结果：
服务端能正确接收报文，并将原文给客户端。

# Case04：
客户端上传一段短报文，马上断开，等待回文，收到回文后马上断开连接。服务端收到短报文后，将原文给客户端。客户端反复断开再连接发送报文，发送200000次。同时启动50个客户端进行测试。
理想结果：
服务端能正确保存通讯日志，并将原文给客户端。

# Case05：
客户端上传一段短报文，服务端将原文给客户端，并将报文保存到通讯日志文件中。客户端发送间隔50毫秒，发送200000次。同时启动20个客户端进行测试。
理想结果：
服务端能正确保存通讯日志，并将原文给客户端。

# Case06：
客户端上传一组命令（每条命令以#结束），服务端将原文解析成命令列表，并在每条命令结尾添加$发给客户。客户端发送间隔50毫秒，发送200000次。同时启动20个客户端进行测试。
理想结果：
服务端能正确解析命令。并将每条命令结尾添加$发给客户。

# Case07：
客户端上传一段短报文，客户端一直等待接收服务端的回文，服务端不发送任何回文。5秒后因长时间收不到客户端新的报文，服务端主动断开连接。
理想结果：
服务端能主动断开连接释放Socket资源，客户端监测到服务端主动断开连接。